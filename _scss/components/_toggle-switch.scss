// Switch (Personal email/mobile number)

// Custom switch as Foundation switches are not accessible

$toggle-switch-off-color: #757575;
$toggle-switch-on-color: #2377CB;
$toggle-switch-inactive-text: rgba(#FFFFFF, .5);
$toggle-switch-shadow: 0 0 4px #FFA200;
$toggle-switch-control-font-size: 11px ;
$toggle-switch-control-font-weight: 500;
$toggle-switch-height: 36px;
$toggle-switch-label-font-size: 16px;
$toggle-switch-offset: 2px; // Offset (distance btw switch and box)
$toggle-switch-transition: cubic-bezier(0, 1, .5, 1);
$toggle-switch-width: 260px !default;
$toggle-switch-control-width: $toggle-switch-width/2;

.toggle-switch {
  *, 
  *::before, 
  *::after { 
    box-sizing: border-box; 
  }

  position: relative;

  input[type="checkbox"] {
    left: 0;
    opacity: 0;
    position: absolute;
    margin: 0;
    top: 0; 

    + label {
      margin: 0;
    }

    &[disabled] ~ label {
      color: rgba($toggle-switch-off-color, .5);
      pointer-events: none;

      .toggle-switch__control { 
        opacity: .4; 
      }
    }

    &:focus ~ label, 
    &:hover ~ label {
      .toggle-switch__control {
        background-color: $toggle-switch-off-color;

        &::after { 
          box-shadow: $toggle-switch-shadow;
          color: $toggle-switch-off-color; 
        }
      }
    }

    &:hover ~ label {
      color: darken($toggle-switch-off-color, 5%); 
    }

    &:checked {
      ~ label {

        &:hover { 
          color: darken($toggle-switch-on-color, 5%); 
        }

        .toggle-switch__control {
          background-color: $toggle-switch-on-color;

          &::before {
            left: 0;
          }

          &::after {
            box-shadow: $toggle-switch-shadow;
            color: $toggle-switch-on-color; 
            content: attr(data-checked);
            transform: translate3d($toggle-switch-width - ($toggle-switch-control-width + $toggle-switch-offset),0,0);
          }
        }
      }

      &:focus, 
      &:hover {
        ~ label {

          .toggle-switch__control {
            background-color: darken($toggle-switch-on-color, 5%); 

            &::after { 
              color: $toggle-switch-on-color; 
            }
          }
        }
      }
    }
  }

  label {
    align-items: center;
    display: inline-block;
    font-size: $toggle-switch-label-font-size;
    position: relative;
    user-select: none;

    .toggle-switch__label-text {
      padding-left: 32px;
    }

    .toggle-switch__control {
      background: lighten($toggle-switch-off-color, 5%);
      height: $toggle-switch-height;
      position: relative;
      transition: background-color .3s $toggle-switch-transition;
      width: $toggle-switch-width;
      border-radius: $toggle-switch-height;

      &::before {
        color: $toggle-switch-inactive-text; 
        font-size: $toggle-switch-control-font-size;
        left: $toggle-switch-width / 2;
        line-height: $toggle-switch-height;
        padding: 0 8px;
        position: absolute;
        text-align: center;
        text-transform: uppercase;
        top: 0;
        width: $toggle-switch-width / 2;
      }

      &::after {
        -webkit-transition: -webkit-transform .3s $toggle-switch-transition;
        background: white;
        color: $toggle-switch-off-color;
        content: attr(data-unchecked);
        font-size: $toggle-switch-control-font-size;
        font-weight: $toggle-switch-control-font-weight;
        line-height: $toggle-switch-height - $toggle-switch-offset;
        position: absolute;
        text-align: center;
        text-transform: uppercase;
        top: $toggle-switch-offset; left: $toggle-switch-offset;
        transform: translate3d(0,0,0);
        transition: transform .3s $toggle-switch-transition;
        width: $toggle-switch-control-width - $toggle-switch-offset;
        z-index: 5;
        height: $toggle-switch-height - ($toggle-switch-offset * 2);
        border-radius: ($toggle-switch-height - ($toggle-switch-offset * 2)) / 2;
      }
    }
  }
}